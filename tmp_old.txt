io:
  outputs_root: outputs
  progress: true

data:
  symbols: [BTCUSDT]
  bars_dir: inputs/bars_1m
  ticks_dir: inputs/ticks
  bar_schema: auto
  file_patterns:
    bars: "{SYMBOL}/{SYMBOL}-1m-{YYYY}-{MM}.csv"
    ticks: "{SYMBOL}/{SYMBOL}-ticks-{YYYY}-{MM}.csv"
  months: { start: "2025-01", end: "2025-08" }

walkforward:
  train_months: 3
  test_months: 1
  step_months: 1
  progress: true

features:
  atr_n: 14
  donch_n_candidate: 20
  percentiles_fit_on: train

  # Base features (semicolon-separated per line, as expected by bars.py)
  base_features:
    - t_240; t_60; t_15; accel_15_240
    - atr; dcw; atr_p; dcw_p
    - body_dom; close_to_hi_atr; close_to_lo_atr

  # Non-linear features (computed causally up to t)
  nonlinear:
    enabled: true
    windows: { small: 15, mid: 60 }
    include:
      # A) Trend shape
      - convexity_15_60_240
      - trend_agree_15_60
      - trend_agree_60_240
      - trend_ratio_15_60
      # B) Compression â†’ release
      - squeeze_score
      - squeeze_age
      - release_slope_15
      # C) Impulses / filters
      - impulse_near_high
      - impulse_near_low
      - zcr_60
      - sign_entropy_60
      - rv60_over_atr
      - range_ratio_60
      - volofvol_proxy
    age_for_nonlinear: true

  # Age/persistence (applies to base AND non-linear features)
  age:
    enabled: true
    n_bins_feature: 5
    n_bins_age: 6
    occ_windows: [60, 240]
    save_schema: true
    schema_file: "artifacts/quantiles.json"

candidates:
  mode: blind
  blind:
    thinning:
      type: cusum_by_ret
      params: { ret_lookback: 480, k_sigma: 5.0, drift: 0.0, min_gap_bars: 5, fallback_stride_k: 0 }
    sides: both

labels:
  r_mult: 5
  horizon_hours: 480
  quick_ignition_hours: 6
  non_overlap: true
  non_overlap_policy: to_exit        # quick | to_exit (must mirror live)
  intra_bar_epsilon_ms: 1          # forbid intra-bar peeking
  min_risk_atr_frac: 0.001         # risk floor on fallback
  eta_atr: 20.0
  eta_by_atr_p:
    - [0, 35, 1.50]
    - [35, 65, 5.00]
    - [65, 85, 10.00]
    - [85, 95, 15.00]
    - [95, 101, 20.00]
  eta_cap: { min: 0.50, max: 6.00 }
  time_scale_from_eta: { base_eta: 0.30, clamp: [0.75, 10.0] }
  stop_band_atr: 0.00
  consec_ticks: 1
  dwell_ms: 0

mining:
  rules:
    auto_binning: true
    n_bins_cont: auto
    max_terms: 2
    top_k: 60
    min_support_frac: 0.001
    min_months: 2
    min_wins: 2
    wilson_z: 1.96
    mine_losers: true
    loser_top_k: 8
    loser_max_precision_ucb: 0.35   # <-- ensure nothing follows this number
    loser_min_resolve_frac: 0.40
    loser_min_months: 2
    fdr:
      enabled: true
      alpha: 0.10

loser_mask:
  enabled: true
  min_support: 20
  min_months_with_lift: 2
  min_ppv_lcb: 0.55
  save_artifact: true

# Gate parameters consumed by walkforward (and echoed inside ml_gating)
gate:
  mode: ml
  calibration: isotonic
  target_ppv_lcb: 0.60
  min_coverage: 0.02
  val_months: 1
  crosses_cap: 30

# ML gating / feature controls
ml_gating:
  enabled: true
  model: logreg               # logreg | gbdt
  calibration: isotonic
  target_ppv_lcb: 0.60
  min_coverage: 0.02
  val_months: 1
  crosses_cap: 30
  regime_gate: true
  regime_min_age_bin: 4
  regime_occ_windows: [240]
  features:
    include_prefixes: ["qbin_", "qbin_agebin_", "agebin_", "since_", "occ_", "B_"]
    exclude_prefixes: []
  n_bins_cont: auto
  binning:
    candidates: [3, 4, 5, 7, 10]
    min_bin_frac: 0.005
    mi_delta_min: 0.002
    ece_delta_min: 0.002
    max_js_month_drift: 0.15
    prefer_monotone: true

# Live-like simulation (no BE/TSL, apply fees & funding)
execution_sim:
  scheduler:
    weight_mode: "expR"
    r_mult: 5.0
    timeout_sec: 300
  fees:
    maker_bps: 1.0            # edit to venue
    taker_bps: 5.0            # edit to venue
    entry_is_maker: false      # typical: taker in, maker out
    exit_is_maker: true
    # roundtrip_bps: 8.0       # optional single override
  funding:
    enabled: true             # false for spot
    rate_per_hour: 0.0001     # e.g., 1 bp/hour
    sign: 1.0                 # +1 cost to longs; -1 if longs are paid

tests:
  parity:
    enabled: false
    signals_ref_csv: null
    trades_ref_csv: null
    r_tol: 0.02
    max_signal_mismatch: 0

